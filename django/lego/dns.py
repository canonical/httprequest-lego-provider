from git import Git, Repo
from os import path
from pathlib import Path
from tempfile import TemporaryDirectory
from .settings import DNS_REPOSITORY_URL, SSH_IDENTITY_FILE

REPOSITORY_BASE_URL="@".join(DNS_REPOSITORY_URL.split("@")[:-1])
REPOSITORY_BRANCH=DNS_REPOSITORY_URL.split("@")[-1]
RECORD_CONTENT="; GENERATED BY httpreq - DO NOT EDIT!"
SSH_EXECUTABLE=f"ssh -i {SSH_IDENTITY_FILE}"

def write_dns_record(dns_record: str) -> None:
    """Write a DNS record following the canonical-is-dns-configs specs if it doesn't exist.

    Attributtes:
        dns_record: the DNS record to add.
    """
    with TemporaryDirectory() as tmp_dir, Git().custom_environment(GIT_SSH_COMMAND=SSH_EXECUTABLE):
        repo = Repo.clone_from(REPOSITORY_BASE_URL, tmp_dir, branch=REPOSITORY_BRANCH)
        dns_record_file = Path(f"{repo.working_tree_dir}/{dns_record}")
        if not dns_record_file.exists:
            dns_record_file.write_text(RECORD_CONTENT)
            repo.index.add([dns_record])
            repo.git.commit("-m", f"Add {dns_record} record")
            repo.remote(name="origin").push()


def remove_dns_record(dns_record: str) -> None:
    """Delete a DNS record following the canonical-is-dns-configs specs if it exists.

    Attributtes:
        dns_record: the DNS record to delete.
    """
    with TemporaryDirectory() as tmp_dir, Git().custom_environment(GIT_SSH_COMMAND=SSH_EXECUTABLE):
        repo = Repo.clone_from(REPOSITORY_BASE_URL, tmp_dir, branch=REPOSITORY_BRANCH)
        dns_record_file = Path(f"{repo.working_tree_dir}/{dns_record}")
        if dns_record_file.exists:
            dns_record_file.unlink(missing_ok=True)
            repo.index.add([dns_record])
            repo.git.commit("-m", f"Remove {dns_record} record")
            repo.remote(name="origin").push()

